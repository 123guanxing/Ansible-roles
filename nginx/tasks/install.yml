---
# author: lework

- name: Check if nginx local file is already configured.
  stat: path={{ nginx_file_path }}
  connection: local
  register: nginx_file_result

- name: Create software files.
  file: path={{ software_files_path }} state=directory
  connection: local
  when: not nginx_file_result.stat.exists
  
- name: Download nginx file.
  get_url: url={{ nginx_file_url }} dest={{ software_files_path }}
  connection: local
  when: not nginx_file_result.stat.exists

- name: Copy nginx file to agent.
  unarchive:
    src: "{{ nginx_file_path }}"
    dest: "/tmp"
    creates: "/tmp/nginx-{{ nginx_version }}"

- name: Ensure gcc packages are installed.
  yum:
    name: "{{ item }}"
    state: installed
  with_items:
    - gcc
    - gcc-c++
    - libtool
    - make
    - libtool
    - zlib
    - zlib-devel
    - openssl
    - openssl-devel
    - pcre
    - pcre-devel

- name: Create nginx group.
  group: name={{ nginx_user }}

- name: Create nginx user.
  user: name={{ nginx_user }} group={{ nginx_user }} shell=/sbin/nologin

- name: Create nginx work Directory.
  file: path={{ item }} state=directory owner={{ nginx_user }} group={{ nginx_user }}
  with_items:
   - "{{ software_install_path }}/nginx"
   - "{{ nginx_temp_path }}/client"
   - "/var/log/nginx"

- name: Check if nginx bin file is already configured.
  stat: path={{ software_install_path }}/nginx/sbin/nginx
  register: nginx_bin_result

- name: Build an install nginx.
  shell: "{{ item }}" 
  with_items:
    - "{{ nginx_configure_command }}"
    - make && make install
  args:
    chdir: "/tmp/nginx-{{ nginx_version }}/"
  when: not nginx_bin_result.stat.exists

- name: Config environment variable.
  lineinfile: dest=/etc/profile line='export PATH={{ software_install_path }}/nginx/sbin/:$PATH'
  run_once: yes
